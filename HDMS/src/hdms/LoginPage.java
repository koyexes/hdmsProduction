/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package hdms;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author KOYA GABRIEL
 */
public class LoginPage extends javax.swing.JFrame {

    /** Creates new form LoginPage */
    public LoginPage() {
        initComponents();
        setLocationRelativeTo(null);
        loginButton.grabFocus();
        bindKeyeventsToAllBackgroundPanelComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        forgotPasswordButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setName("loginFrame"); // NOI18N
        setResizable(false);

        backgroundPanel.setBackground(new java.awt.Color(255, 255, 255));
        backgroundPanel.setName("background"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hdms/images/icon/user-icon.jpg"))); // NOI18N
        jLabel1.setName("usernameIcon"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hdms/images/icon/password.png"))); // NOI18N
        jLabel3.setName("passwordIcon"); // NOI18N

        usernameField.setBackground(new java.awt.Color(255, 255, 255));
        usernameField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        usernameField.setForeground(new java.awt.Color(153, 153, 153));
        usernameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        usernameField.setText("Username");
        usernameField.setToolTipText("input username");
        usernameField.setName("usernameField"); // NOI18N
        usernameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameFieldFocusLost(evt);
            }
        });

        passwordField.setBackground(new java.awt.Color(255, 255, 255));
        passwordField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        passwordField.setForeground(new java.awt.Color(153, 153, 153));
        passwordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordField.setText("Password");
        passwordField.setToolTipText("input password");
        passwordField.setEchoChar(Character.MIN_VALUE
        );
        passwordField.setName("passwordField"); // NOI18N
        passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordFieldFocusLost(evt);
            }
        });

        loginButton.setBackground(new java.awt.Color(0, 0, 102));
        loginButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setText("login");
        loginButton.setName("loginButton"); // NOI18N
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        forgotPasswordButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        forgotPasswordButton.setForeground(new java.awt.Color(255, 0, 0));
        forgotPasswordButton.setText("Forgot Password?");
        forgotPasswordButton.setContentAreaFilled(false);
        forgotPasswordButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        forgotPasswordButton.setMinimumSize(new java.awt.Dimension(2, 2));
        forgotPasswordButton.setName("forgotPasswordButton"); // NOI18N
        forgotPasswordButton.setOpaque(false);
        forgotPasswordButton.setPreferredSize(new java.awt.Dimension(50, 200));
        forgotPasswordButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                forgotPasswordButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                forgotPasswordButtonMouseExited(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(backgroundPanelLayout.createSequentialGroup()
                            .addComponent(forgotPasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(loginButton))
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(forgotPasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void forgotPasswordButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgotPasswordButtonMouseEntered
        // TODO add your handling code here:
        forgotPasswordButton.setContentAreaFilled(true);
    }//GEN-LAST:event_forgotPasswordButtonMouseEntered

    private void forgotPasswordButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgotPasswordButtonMouseExited
        // TODO add your handling code here:
        forgotPasswordButton.setContentAreaFilled(false);
    }//GEN-LAST:event_forgotPasswordButtonMouseExited

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        String username = usernameField.getText();
        char [] passwordArray = passwordField.getPassword();
        StringBuilder passwordBuilder = new StringBuilder();
        String password = passwordBuilder.append(passwordArray).toString();
        if((username.equalsIgnoreCase("username") || username.equalsIgnoreCase("can't be  empty") || username.isEmpty())
            && (password.equalsIgnoreCase("password")||password.equalsIgnoreCase("can't be empty") || password.isEmpty())){
            usernameField.setHorizontalAlignment(JTextField.CENTER);
            passwordField.setHorizontalAlignment(JTextField.CENTER);
            passwordField.setEchoChar(Character.MIN_VALUE);
            usernameField.setForeground(Color.red);
            usernameField.setText("can't be empty");
            passwordField.setForeground(Color.red);
            passwordField.setText("can't be empty");
          
        }else if(username.equalsIgnoreCase("username") || username.equalsIgnoreCase("can't be  empty")|| username.isEmpty()){
            usernameField.setHorizontalAlignment(JTextField.CENTER);
            usernameField.setForeground(Color.red);
            usernameField.setText("can't be empty");
        }else if(password.equalsIgnoreCase("password")||password.equalsIgnoreCase("can't be empty") || password.isEmpty()){
            passwordField.setHorizontalAlignment(JTextField.CENTER);
            passwordField.setEchoChar(Character.MIN_VALUE);
            passwordField.setForeground(Color.red);
            passwordField.setText("can't be empty");
        }else{
            
            Object [] userDatas =  Processes.verifyLoginInfo(username, password);
            if(userDatas != null){
                userId = (int) userDatas[0];
                name = Methods.toCamelCase((userDatas[1]).toString());
                if((int)userDatas[2] == 1){
                    adminFlag = true;
                }

                JOptionPane.showMessageDialog(this, "ACCESS GRANTED", "Successful", JOptionPane.INFORMATION_MESSAGE);
                // this section set the password field back to default so that when the login frame is recalled, the user's password won't be displayed
                passwordField.setForeground(new Color(153,153,153));
                passwordField.setText("Password");
                passwordField.setHorizontalAlignment(JTextField.CENTER);
                passwordField.setEchoChar(Character.MIN_VALUE);
                this.dispose();
                javax.swing.SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        MainContainer mainContainer =  new MainContainer();
                        mainContainer.setExtendedState(JFrame.MAXIMIZED_BOTH);
                        mainContainer.setVisible(true);
                    }
                });
            }else{
                JOptionPane.showMessageDialog(this, "ACCESS DENIED", "Failed", JOptionPane.WARNING_MESSAGE);
                usernameField.setForeground(new Color(153, 153, 153));
                usernameField.setHorizontalAlignment(JTextField.CENTER);
                usernameField.setText("Username");
                passwordField.setForeground(new Color(153,153,153));
                passwordField.setText("Password");
                passwordField.setHorizontalAlignment(JTextField.CENTER);
                passwordField.setEchoChar(Character.MIN_VALUE);
            }
                    
        }

    }//GEN-LAST:event_loginButtonActionPerformed

    private void usernameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFieldFocusGained
        // TODO add your handling code here:
        if(usernameField.getText().equalsIgnoreCase("can't be empty") || usernameField.getText().equalsIgnoreCase("Username") ||
             usernameField.getText().isEmpty()){
            usernameField.setForeground(Color.black);
            usernameField.setText("");
            usernameField.setHorizontalAlignment(JTextField.LEFT);
        }
    }//GEN-LAST:event_usernameFieldFocusGained

    private void passwordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusGained

         if(passwordField.getText().equalsIgnoreCase("can't be empty") || passwordField.getText().equalsIgnoreCase("password")||
            passwordField.getText().isEmpty()){
            passwordField.setForeground(Color.black);
            passwordField.setText("");
            passwordField.setHorizontalAlignment(JTextField.LEFT);
            passwordField.setEchoChar('*');
        }
    }//GEN-LAST:event_passwordFieldFocusGained

    private void usernameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFieldFocusLost
        // TODO add your handling code here:
        if(usernameField.getText().isEmpty()){
            usernameField.setForeground(new Color(153, 153, 153));
            usernameField.setHorizontalAlignment(JTextField.CENTER);
            usernameField.setText("Username");
        }
    }//GEN-LAST:event_usernameFieldFocusLost

    private void passwordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusLost
        // TODO add your handling code here:
        if(passwordField.getText().isEmpty()){
            passwordField.setForeground(new Color(153,153,153));
            passwordField.setText("Password");
            passwordField.setHorizontalAlignment(JTextField.CENTER);
            passwordField.setEchoChar(Character.MIN_VALUE);
        }
    }//GEN-LAST:event_passwordFieldFocusLost

    private void bindKeyeventsToAllBackgroundPanelComponents(){ // adding keyevent to usernamefield, passwordfield and loginbutton
        Component [] components = backgroundPanel.getComponents(); // getting all the components attached to the backgroundpanel
        String [] componentNameArray = {"usernameField","passwordField","loginButton"}; // creating an name array of the components under consideration 
        String componentName;
        for(Component comp : components){ // iterating through the component array
            componentName = ((JComponent)comp).getName(); // getting the name of each component
            for(String name : componentNameArray ){ // iterating through the name array of the components
                if(componentName.equalsIgnoreCase(name)){ // comparing the name of each component from the component array to the names in the name array
                    comp.addKeyListener(new KeyAdapter() { // adding keyevent to the compenents under consideration
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                            if(evt.getKeyCode() == KeyEvent.VK_ENTER){ // checking if the key pressed is the enter key
                                loginButton.doClick(); // firing the action event attached to the loginbutton
                                loginButton.grabFocus();
                            
                            }
                        }
                    });
                }
            }
      
        }
    }
    
    static JPasswordField getPasswordField(){
        return passwordField;
    }
    
    static String getFullName(){
        return Methods.toCamelCase(name);
    }
    
    static int getUserId(){
        return userId;
    }
  
    static boolean getAdminFlag(){
        return adminFlag;
    }
    
    private static String name;
    private static int userId ;
    private static boolean adminFlag = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton forgotPasswordButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loginButton;
    private static javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables

}
